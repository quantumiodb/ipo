// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model IpoStock {
  id              String    @id @default(cuid())
  symbol          String    
  companyName     String
  market          Market
  expectedPrice   Float?
  priceRange      String?
  sharesOffered   Int?
  ipoDate         DateTime?
  status          IpoStatus @default(UPCOMING)
  description     String?
  sector          String?
  industry        String?
  underwriters    String[]
  marketCap       Float?
  revenue         Float?
  netIncome       Float?
  employees       Int?
  website         String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("ipo_stocks")
}

model UvStatistic {
  id          String   @id @default(cuid())
  date        DateTime @default(now()) @db.Date
  uniqueViews Int      @default(0)
  totalViews  Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("uv_statistics")
}

model VisitorLog {
  id          String   @id @default(cuid())
  visitorId   String   // 基于IP+UserAgent生成的唯一标识
  ipAddress   String?
  userAgent   String?
  page        String   @default("/")
  visitedAt   DateTime @default(now())

  @@index([visitorId, visitedAt])
  @@map("visitor_logs")
}

enum Market {
  US
  HK
}

enum IpoStatus {
  UPCOMING
  PRICING
  LISTED
  WITHDRAWN
  POSTPONED
}

model McpApp {
  id              String      @id @default(cuid())
  name            String
  fullName        String      // owner/repo format
  description     String?
  category        McpCategory @default(OTHER)
  githubUrl       String      @unique
  homepage        String?
  author          String
  stars           Int         @default(0)
  forks           Int         @default(0)
  issues          Int         @default(0)
  lastUpdated     DateTime?
  createdAt       DateTime
  language        String?
  license         String?
  topics          String[]    // GitHub topics/tags
  readme          String?
  isOfficial      Boolean     @default(false)
  popularityScore Float       @default(0)
  status          McpStatus   @default(ACTIVE)
  syncedAt        DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@index([category, popularityScore])
  @@index([stars])
  @@index([popularityScore])
  @@map("mcp_apps")
}

enum McpCategory {
  DEVELOPMENT
  PRODUCTIVITY  
  DATA_ANALYSIS
  CLOUD_SERVICES
  AI_ML
  AUTOMATION
  SECURITY
  COMMUNICATION
  CREATIVE
  FINANCE
  ENTERPRISE
  TESTING
  DATABASE
  WEB_SCRAPING
  OTHER
}

enum McpStatus {
  ACTIVE
  DEPRECATED
  EXPERIMENTAL
  ARCHIVED
}